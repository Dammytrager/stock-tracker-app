# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Orbs are reusable packages of CircleCI configuration that you may share across projects, enabling you to create encapsulated, parameterized commands, jobs, and executors that can be used across multiple projects.
# See: https://circleci.com/docs/2.0/orb-intro/
orbs:
  ruby: circleci/ruby@0.1.2
  heroku: circleci/heroku@0.0.10

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  build:
    docker:
      - image: cimg/ruby:3.0.0-node
    executor: ruby/default
    steps:
      - checkout

      # Install Node dependencies
      - restore_cache:
          keys:
            - npm-build-{{ checksum "package.json" }}
      - run:
          name: install node dependencies
          command: npm install
      - save_cache:
          key: npm-build-{{ checksum "package.json" }}
          paths:
            - node_modules

      # Install bundler dependencies
      - restore_cache:
          keys:
            - rails-build-{{ checksum "Gemfile.lock" }}
      - run:
          name: install bundler
          command: gem install bundler:2.2.3
      - run:
          name: Which bundler?
          command: bundle -v
      - ruby/bundle-install
      - save_cache:
          key: rails-build-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle


# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  sample: # This is the name of the workflow, feel free to change it to better match your workflow.
    # Inside the workflow, you define the jobs you want to run.
    jobs:
      - build
      - heroku/deploy-via-git: # Use the pre-configured job, deploy-via-git
          requires:
            - build
